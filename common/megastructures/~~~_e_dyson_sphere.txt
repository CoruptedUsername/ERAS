#Dyson Sphere Site
dyson_sphere_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = -7 y = -7 }
	prerequisites = { "tech_dyson_sphere" }

	build_time = @ukn_dyson_sphere_p0_build_time_g_star
	resources = {
		category = ukn_megastructure_site
		cost = {
			influence = @ukn_dyson_sphere_p0_cost_influence_g_star
			unity = @ukn_dyson_sphere_p0_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p0_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p0_cost_ukn_meta_materials_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p0_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p0_cost_ukn_causalitons_g_star
		}
		upkeep = {
			energy = @ukn_dyson_sphere_p0_upkeep_energy_g_star
		}
	}
#######################

	potential = {
		OR = {
			AND = {
				NOT = { has_global_flag = gigastructures_enabled }
			}
			AND = {
				has_global_flag = gigastructures_enabled
				NOT = { has_global_flag = vanilla_dyson_disabled }
				OR = {
					check_variable = { which = giga_vanilla_dyson_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_vanilla_dyson value < giga_vanilla_dyson_cap }
				}
			}
		}
	}

	possible = {
		exists = starbase
		custom_tooltip = { fail_text = "requires_inside_border"			is_inside_border = from }
		custom_tooltip = { fail_text = "requires_surveyed_system"		giga_system_is_surveyed = yes }
		custom_tooltip = { fail_text = "requires_no_habitable_planets"	giga_any_hab_planets = no }
		custom_tooltip = {
			fail_text = "requires_not_capped"
			from = {
				OR = {
					check_variable = { which = giga_vanilla_dyson_cap value = 0 }						# No Cap
					check_variable = { which = giga_current_vanilla_dyson value < giga_vanilla_dyson_cap }
				}
			}
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = { fail_text = "requires_no_existing_megastructure"		planet_has_no_megastructure = yes }
			custom_tooltip = { fail_text = "must_build_around_star"					is_star = yes }
			custom_tooltip = { fail_text = "requires_no_anomaly"					has_anomaly = no }
			custom_tooltip = { 
				fail_text = "requires_standard_planet_class_o_star"			
				OR = { 
					giga_is_standard_star = yes
					AND = {
						is_planet_class = pc_giga_o_star 
						from = { has_technology = giga_tech_dyson_o_star }
					}
				} 
			}
		}
	}

	ai_weight = {
		weight = 100	# Default = 100

		# Can we afford the upkeep

		# Do we want the production
		modifier = { factor = 3.75	chk_needs_energy_10 = yes }
		modifier = { factor = 3.50	chk_needs_energy_09 = yes }
		modifier = { factor = 3.25	chk_needs_energy_08 = yes }
		modifier = { factor = 3.00	chk_needs_energy_07 = yes }
		modifier = { factor = 2.75	chk_needs_energy_06 = yes }
		modifier = { factor = 2.50	chk_needs_energy_05 = yes }
		modifier = { factor = 2.25	chk_needs_energy_04 = yes }
		modifier = { factor = 2.00	chk_needs_energy_03 = yes }
		modifier = { factor = 1.75	chk_needs_energy_25 = yes }
		modifier = { factor = 1.50	chk_needs_energy_02 = yes }
		modifier = { factor = 1.25	chk_needs_energy_15 = yes }

		# Is this system a good location?
		modifier = { factor = 0.1	any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } }
		modifier = { factor = 0.5	any_neighbor_system = { any_neighbor_system = { exists = owner NOT = { owner = { is_same_value = from } } } } }

		# Do we lean towards this from federation/ethic/civic?

		# How many of this megastructure can the AI build?
		modifier = { factor = 0.00	from = { has_country_flag = has_recently_built_dyson_sphere } }
		modifier = {
			factor = 0.00
			from = {
				count_owned_megastructure = {
					limit = {
						OR = {
							is_megastructure_type = dyson_sphere_5
							is_megastructure_type = dyson_sphere_5_b_star
							is_megastructure_type = dyson_sphere_5_m_giant_star
							is_megastructure_type = dyson_sphere_5_a_star
							is_megastructure_type = dyson_sphere_5_f_star
							is_megastructure_type = dyson_sphere_5_g_star
							is_megastructure_type = dyson_sphere_5_k_star
							is_megastructure_type = dyson_sphere_5_m_star
						}
					}
					count > 3
				}
			}
		}
		modifier = {
			factor = 0.25
			from = {
				count_owned_megastructure = {
					limit = {
						OR = {
							is_megastructure_type = dyson_sphere_5
							is_megastructure_type = dyson_sphere_5_b_star
							is_megastructure_type = dyson_sphere_5_m_giant_star
							is_megastructure_type = dyson_sphere_5_a_star
							is_megastructure_type = dyson_sphere_5_f_star
							is_megastructure_type = dyson_sphere_5_g_star
							is_megastructure_type = dyson_sphere_5_k_star
							is_megastructure_type = dyson_sphere_5_m_star
						}
					}
					count = 3
				}
			}
		}
		modifier = {
			factor = 0.50
			from = {
				count_owned_megastructure = {
					limit = {
						OR = {
							is_megastructure_type = dyson_sphere_5
							is_megastructure_type = dyson_sphere_5_b_star
							is_megastructure_type = dyson_sphere_5_m_giant_star
							is_megastructure_type = dyson_sphere_5_a_star
							is_megastructure_type = dyson_sphere_5_f_star
							is_megastructure_type = dyson_sphere_5_g_star
							is_megastructure_type = dyson_sphere_5_k_star
							is_megastructure_type = dyson_sphere_5_m_star
						}
					}
					count = 2
				}
			}
		}
		modifier = {
			factor = 0.75
			from = {
				count_owned_megastructure = {
					limit = {
						OR = {
							is_megastructure_type = dyson_sphere_5
							is_megastructure_type = dyson_sphere_5_b_star
							is_megastructure_type = dyson_sphere_5_m_giant_star
							is_megastructure_type = dyson_sphere_5_a_star
							is_megastructure_type = dyson_sphere_5_f_star
							is_megastructure_type = dyson_sphere_5_g_star
							is_megastructure_type = dyson_sphere_5_k_star
							is_megastructure_type = dyson_sphere_5_m_star
						}
					}
					count = 1
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				OR = {
					has_megastructure = dyson_sphere_0
					has_megastructure = dyson_sphere_0_b_star
					has_megastructure = dyson_sphere_0_m_giant_star
					has_megastructure = dyson_sphere_0_a_star
					has_megastructure = dyson_sphere_0_f_star
					has_megastructure = dyson_sphere_0_g_star
					has_megastructure = dyson_sphere_0_k_star
					has_megastructure = dyson_sphere_0_m_star
					has_megastructure = dyson_sphere_1
					has_megastructure = dyson_sphere_1_b_star
					has_megastructure = dyson_sphere_1_m_giant_star
					has_megastructure = dyson_sphere_1_a_star
					has_megastructure = dyson_sphere_1_f_star
					has_megastructure = dyson_sphere_1_g_star
					has_megastructure = dyson_sphere_1_k_star
					has_megastructure = dyson_sphere_1_m_star
					has_megastructure = dyson_sphere_2
					has_megastructure = dyson_sphere_2_b_star
					has_megastructure = dyson_sphere_2_m_giant_star
					has_megastructure = dyson_sphere_2_a_star
					has_megastructure = dyson_sphere_2_f_star
					has_megastructure = dyson_sphere_2_g_star
					has_megastructure = dyson_sphere_2_k_star
					has_megastructure = dyson_sphere_2_m_star
					has_megastructure = dyson_sphere_3
					has_megastructure = dyson_sphere_3_b_star
					has_megastructure = dyson_sphere_3_m_giant_star
					has_megastructure = dyson_sphere_3_a_star
					has_megastructure = dyson_sphere_3_f_star
					has_megastructure = dyson_sphere_3_g_star
					has_megastructure = dyson_sphere_3_k_star
					has_megastructure = dyson_sphere_3_m_star
					has_megastructure = dyson_sphere_4
					has_megastructure = dyson_sphere_4_b_star
					has_megastructure = dyson_sphere_4_m_giant_star
					has_megastructure = dyson_sphere_4_a_star
					has_megastructure = dyson_sphere_4_f_star
					has_megastructure = dyson_sphere_4_g_star
					has_megastructure = dyson_sphere_4_k_star
					has_megastructure = dyson_sphere_4_m_star
					has_megastructure = dyson_sphere_ruined
					has_megastructure = dyson_sphere_ruined_b_star
					has_megastructure = dyson_sphere_ruined_m_giant_star
					has_megastructure = dyson_sphere_ruined_a_star
					has_megastructure = dyson_sphere_ruined_f_star
					has_megastructure = dyson_sphere_ruined_g_star
					has_megastructure = dyson_sphere_ruined_k_star
					has_megastructure = dyson_sphere_ruined_m_star
				}
			}
		}
	}

	on_build_complete = {
		set_star_flag = dyson_sphere_built
		every_system_planet = { limit = { has_modifier = terraforming_candidate }	remove_modifier = terraforming_candidate }
		from = {
			set_timed_country_flag = { flag = has_recently_built_dyson_sphere years = 20 }
			set_country_flag = built_dyson_sphere
			change_variable = { which = giga_current_vanilla_dyson value = 1 }
		}
		if = {	limit = { fromfrom.planet = { is_planet_class = pc_giga_o_star } }	spawn_megastructure = { type = "dyson_sphere_0_o_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		if = {
			limit = { has_global_flag = giga_dyson_scaling }
			if = {		limit = { fromfrom.planet = { is_planet_class = pc_b_star } }		spawn_megastructure = { type = "dyson_sphere_0_b_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
			else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_m_giant_star } }	spawn_megastructure = { type = "dyson_sphere_0_m_giant_star"	owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
			else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_a_star } }		spawn_megastructure = { type = "dyson_sphere_0_a_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
			else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_f_star } }		spawn_megastructure = { type = "dyson_sphere_0_f_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
			else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_g_star } }		spawn_megastructure = { type = "dyson_sphere_0_g_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
			else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_k_star } }		spawn_megastructure = { type = "dyson_sphere_0_k_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
			else_if = {	limit = { fromfrom.planet = { is_planet_class = pc_m_star } }		spawn_megastructure = { type = "dyson_sphere_0_m_star"			owner = from coords_from = fromfrom.planet } remove_megastructure = fromfrom }
		}
		fromfrom.planet = {
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
			if = { limit = { has_orbital_station = yes } orbital_station = { dismantle = yes } }
		}
	}
}

#Dyson Sphere Frame
dyson_sphere_1 = {
	entity = "dyson_sphere_phase_01_entity"
	construction_entity = "dyson_sphere_frame_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { dyson_sphere_0 }
	prerequisites = { "tech_dyson_sphere" }
	ai_weight = { factor = 10 } # If we can build it, we will build it

	build_time = @ukn_dyson_sphere_p1_build_time_g_star
	resources = {
		category = ukn_megastructure_frame
		cost = {
			unity = @ukn_dyson_sphere_p1_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p1_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p1_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p1_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p1_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p1_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p1_cost_ukn_causalitons_g_star
		}
		upkeep = {
			energy = @ukn_dyson_sphere_p1_upkeep_energy_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p1_upkeep_ukn_meta_materials_g_star
		}
		produces = {
			energy = @ukn_dyson_sphere_p1_output_energy_g_star
		}
	}
#######################
}

#Partial Dyson Sphere
dyson_sphere_2 = {
	entity = "dyson_sphere_phase_02_entity"
	construction_entity = "dyson_sphere_part_1_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { dyson_sphere_1 }
	prerequisites = { "tech_dyson_sphere" }
	ai_weight = { factor = 10 } # If we can build it, we will build it

	build_time = @ukn_dyson_sphere_p2_build_time_g_star
	resources = {
		category = ukn_megastructure_main
		cost = {
			unity = @ukn_dyson_sphere_p2_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p2_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p2_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p2_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p2_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p2_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p2_cost_ukn_causalitons_g_star
		}
		upkeep = {
			ukn_meta_materials = @ukn_dyson_sphere_p2_upkeep_ukn_meta_materials_g_star
		}
		produces = {
			energy = @ukn_dyson_sphere_p2_output_energy_g_star
		}
	}
#######################
}

#Partial Dyson Sphere
dyson_sphere_3 = {
	entity = "dyson_sphere_phase_03_entity"
	construction_entity = "dyson_sphere_part_2_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { dyson_sphere_2 }
	prerequisites = { "tech_dyson_sphere" }
	ai_weight = { factor = 10 } # If we can build it, we will build it

	build_time = @ukn_dyson_sphere_p3_build_time_g_star
	resources = {
		category = ukn_megastructure_main
		cost = {
			unity = @ukn_dyson_sphere_p3_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p3_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p3_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p3_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p3_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p3_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p3_cost_ukn_causalitons_g_star
		}
		upkeep = {
			ukn_meta_materials = @ukn_dyson_sphere_p3_upkeep_ukn_meta_materials_g_star
		}
		produces = {
			energy = @ukn_dyson_sphere_p3_output_energy_g_star
		}
	}
#######################
}

#Partial Dyson Sphere
dyson_sphere_4 = {
	entity = "dyson_sphere_phase_04_entity"
	construction_entity = "dyson_sphere_part_3_entity"
	portrait = "GFX_megastructure_construction_background"
	upgrade_from = { dyson_sphere_3 }
	prerequisites = { "tech_dyson_sphere" }
	ai_weight = { factor = 10 } # If we can build it, we will build it

	build_time = @ukn_dyson_sphere_p4_build_time_g_star
	resources = {
		category = ukn_megastructure_main
		cost = {
			unity = @ukn_dyson_sphere_p4_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p4_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p4_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p4_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p4_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p4_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p4_cost_ukn_causalitons_g_star
		}
		upkeep = {
			ukn_meta_materials = @ukn_dyson_sphere_p4_upkeep_ukn_meta_materials_g_star
		}
		produces = {
			energy = @ukn_dyson_sphere_p4_output_energy_g_star
		}
	}
#######################
}

#Dyson Sphere
dyson_sphere_5 = {
	entity = "dyson_sphere_phase_05_entity"
	construction_entity = "dyson_sphere_part_4_entity"
	portrait = "GFX_megastructure_dyson_sphere_background"
	upgrade_from = { dyson_sphere_4 }
	prerequisites = { "tech_dyson_sphere" }
#	show_prereqs = yes
	ai_weight = { factor = 10 } # If we can build it, we will build it

	build_time = @ukn_dyson_sphere_p5_build_time_g_star
	resources = {
		category = ukn_megastructure_main
		cost = {
			unity = @ukn_dyson_sphere_p5_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p5_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p5_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p5_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p5_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p5_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p5_cost_ukn_causalitons_g_star
		}
		upkeep = {
			ukn_meta_materials = @ukn_dyson_sphere_p5_upkeep_ukn_meta_materials_g_star
		}
		produces = {
			energy = @ukn_dyson_sphere_p5_output_energy_g_star
		}
	}
#######################

	on_build_complete = {
		from = {
			set_country_flag = has_built_or_repaired_megastructure	# Backup
			set_country_flag = ukn_has_built_megastructure 	# Triggers Master Builders
		}
		every_system_planet = {
			if = {		limit = { is_planet_class = pc_barren }											change_pc = pc_barren_cold }
			else_if = {	limit = { OR = { is_planet_class = pc_molten	is_planet_class = pc_toxic } }	change_pc = pc_frozen }
		}
	}
}

# Ruined Dyson Sphere
dyson_sphere_ruined = {
	entity = "dyson_sphere_destroyed_entity"
	portrait = "GFX_megastructure_construction_background"
	potential = { always = no }
}

# Restored Dyson Sphere
dyson_sphere_restored = {
	entity = "dyson_sphere_phase_05_entity"
	construction_entity = "dyson_sphere_part_4_entity"
	portrait = "GFX_megastructure_dyson_sphere_background"
	upgrade_from = { dyson_sphere_ruined }

	build_time = @ukn_dyson_r_build_time_g_star
	resources = {
		category = ukn_megastructure_main
		cost = {
			influence = @ukn_dyson_r_cost_influence_g_star
			unity = @ukn_dyson_r_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_r_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_r_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_r_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_r_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_r_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_r_cost_ukn_causalitons_g_star
		}
		upkeep = {
			ukn_meta_materials = @ukn_dyson_r_upkeep_ukn_meta_materials_g_star
		}
		produces = {
			energy = @ukn_dyson_r_output_energy_g_star
		}
	}
#######################

	possible = {
		exists = from
		from = { has_technology = tech_mega_engineering }
	}

	ai_weight = { factor = 10 } # If we can build it, we will build it
	on_build_start = { fromfrom = { set_graphical_culture = root.from } }
	on_build_complete = {
		every_system_planet = {
			if = {		limit = { has_modifier = terraforming_candidate }								remove_modifier = terraforming_candidate }
			if = {		limit = { is_planet_class = pc_barren }											change_pc = pc_barren_cold }
			else_if = {	limit = { OR = { is_planet_class = pc_molten	is_planet_class = pc_toxic } }	change_pc = pc_frozen }
		}
		giga_remove_system_debris = yes
		from = {
			set_country_flag = ukn_has_repaired_megastructure
			set_country_flag = has_built_or_repaired_megastructure	# Backup
			country_event = { id = utopia.2011 }
		}
		fromfrom.planet = {
			set_planet_flag = megastructure			# Vanilla uses to check if a megastrucure can be built here
			set_planet_flag = has_megastructure		# Vanilla uses to check if an orbital station can be built here
		}
	}
}

#Dyson Sphere
dyson_sphere_5_dummy_text = {
	entity = "dyson_sphere_phase_05_entity"
	construction_entity = "dyson_sphere_part_4_entity"
	portrait = "GFX_megastructure_dyson_sphere_background"
	upgrade_from = { dyson_sphere_5 }
	prerequisites = { "tech_dyson_sphere" }
	show_prereqs = yes

	build_time = 40200
	resources = {
		category = megastructures
		cost = {
			influence = @ukn_dyson_sphere_p0_cost_influence_g_star
			unity = @ukn_dyson_sphere_p0_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p0_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p0_cost_ukn_meta_materials_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p0_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p0_cost_ukn_causalitons_g_star
		}
		cost = {
			unity = @ukn_dyson_sphere_p1_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p1_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p1_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p1_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p1_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p1_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p1_cost_ukn_causalitons_g_star
		}
		cost = {
			unity = @ukn_dyson_sphere_p2_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p2_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p2_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p2_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p2_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p2_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p2_cost_ukn_causalitons_g_star
		}
		cost = {
			unity = @ukn_dyson_sphere_p3_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p3_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p3_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p3_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p3_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p3_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p3_cost_ukn_causalitons_g_star
		}
		cost = {
			unity = @ukn_dyson_sphere_p4_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p4_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p4_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p4_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p4_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p4_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p4_cost_ukn_causalitons_g_star
		}
		cost = {
			unity = @ukn_dyson_sphere_p5_cost_unity_g_star
####
			consumer_goods = @ukn_dyson_sphere_p5_cost_consumer_goods_g_star
			ukn_meta_materials = @ukn_dyson_sphere_p5_cost_ukn_meta_materials_g_star
####
			ukn_femtomatter = @ukn_dyson_sphere_p5_cost_ukn_femtomatter_g_star
#			ukn_condensics = @ukn_dyson_sphere_p5_cost_ukn_condensics_g_star
#			ukn_quasi_matter = @ukn_dyson_sphere_p5_cost_ukn_quasi_matter_g_star
#			ukn_causalitons = @ukn_dyson_sphere_p5_cost_ukn_causalitons_g_star
		}
	}
#######################

	potential = {
		NOT = { has_technology = tech_dyson_sphere }
	}

	ai_weight = { factor = 0 } # Never
}